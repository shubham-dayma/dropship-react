{"ast":null,"code":"var _jsxFileName = \"/var/www/html/python3_venv/mysite/templates/dropshipping/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'; // React Life Cycle\n// class Car extends React.Component{\n// \tconstructor(props)\n// \t{\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\tmodal:'maruti'\n// \t\t}\n// \t}\n// \tstatic getDerivedStateFromProps(props, state){\n// \t\treturn {modal:props.which_modal};\n// \t}\n// \trender(){\n// \t\treturn <h1>I have {this.state.modal} </h1>;\n// \t}\n// \tcomponentDidMount()\n// \t{\n// \t\tsetTimeout(() => {\n// \t      this.setState({modal: \"Mahindra\"})\n// \t    }, 1000)\n// \t}\n// }\n// class App2 extends React.Component{\n// \trender(){\n// \t\treturn <Car which_modal=\"tesla\" />\n// \t}\n// }\n// ReactDOM.render(<App2/>, document.getElementById('root'));\n// React State\n// class App2 extends React.Component{\n// \tconstructor(props)\n// \t{\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\tbrand : 'Maruti',\n// \t\t\tmodal : 'Ciaz',\n// \t\t\tyear : '2017'\n// \t\t};\n// \t}\n// \tchangeYear = () => {\n// \t\t\tthis.setState({year:2002})\n// \t\t}; \n// \trender(){\n// \t\treturn <Car/>;\n// \t}\n// }\n// class Car extends App2{\n// \tconstructor(props)\n// \t{\n// \t\tsuper(props)\n// \t}\n// \trender(){\n// \t\treturn <div>\n// \t\t\t\t\t<h1>I have {this.state.brand} {this.state.modal} of year {this.state.year}</h1>\n// \t\t\t\t\t<button onClick={this.changeYear}> Change year </button>\n// \t\t\t\t</div>;\n// \t}\n// }\n// ReactDOM.render(<App2/>, document.getElementById('root'));\n// React Props\n// class Table extends React.Component {\n//   render(){\n//     var mulitplier = 2;\n//     return <h1>{mulitplier} * {this.props.multiplyBy} = {mulitplier * this.props.multiplyBy} </h1>;\n//   }\n// }\n// class Garge extends React.Component{\n//   render(){\n//   \tvar number = 2;\n//     return <Table multiplyBy={number} />;\n//   }\n// }\n// ReactDOM.render(<Garge />, document.getElementById('root'))\n// react app\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 98,\n  columnNumber: 3\n}, this), document.getElementById('root')); // // // If you want to start measuring performance in your app, pass a function\n// // // to log results (for example: reportWebVitals(console.log))\n// // // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/var/www/html/python3_venv/mysite/templates/dropshipping/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;;;AACAF,QAAQ,CAACG,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAH,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// React Life Cycle\n// class Car extends React.Component{\n// \tconstructor(props)\n// \t{\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\tmodal:'maruti'\n// \t\t}\n// \t}\n\n// \tstatic getDerivedStateFromProps(props, state){\n// \t\treturn {modal:props.which_modal};\n// \t}\n\n// \trender(){\n// \t\treturn <h1>I have {this.state.modal} </h1>;\n// \t}\n\n// \tcomponentDidMount()\n// \t{\n// \t\tsetTimeout(() => {\n// \t      this.setState({modal: \"Mahindra\"})\n// \t    }, 1000)\n// \t}\n// }\n\n// class App2 extends React.Component{\n// \trender(){\n// \t\treturn <Car which_modal=\"tesla\" />\n// \t}\n// }\n\n\n// ReactDOM.render(<App2/>, document.getElementById('root'));\n\n// React State\n// class App2 extends React.Component{\n// \tconstructor(props)\n// \t{\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\tbrand : 'Maruti',\n// \t\t\tmodal : 'Ciaz',\n// \t\t\tyear : '2017'\n// \t\t};\n// \t}\n\n// \tchangeYear = () => {\n// \t\t\tthis.setState({year:2002})\n// \t\t}; \n\n// \trender(){\n// \t\treturn <Car/>;\n// \t}\n// }\n\n// class Car extends App2{\n// \tconstructor(props)\n// \t{\n// \t\tsuper(props)\n// \t}\n// \trender(){\n// \t\treturn <div>\n// \t\t\t\t\t<h1>I have {this.state.brand} {this.state.modal} of year {this.state.year}</h1>\n// \t\t\t\t\t<button onClick={this.changeYear}> Change year </button>\n// \t\t\t\t</div>;\n// \t}\n// }\n\n// ReactDOM.render(<App2/>, document.getElementById('root'));\n\n// React Props\n// class Table extends React.Component {\n//   render(){\n//     var mulitplier = 2;\n//     return <h1>{mulitplier} * {this.props.multiplyBy} = {mulitplier * this.props.multiplyBy} </h1>;\n//   }\n// }\n\n// class Garge extends React.Component{\n//   render(){\n//   \tvar number = 2;\n//     return <Table multiplyBy={number} />;\n//   }\n// }\n\n\n// ReactDOM.render(<Garge />, document.getElementById('root'))\n\n// react app\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // // If you want to start measuring performance in your app, pass a function\n// // // to log results (for example: reportWebVitals(console.log))\n// // // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}